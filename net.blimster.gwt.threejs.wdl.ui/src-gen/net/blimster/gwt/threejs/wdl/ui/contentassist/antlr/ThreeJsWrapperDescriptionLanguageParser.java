/*
* generated by Xtext
*/
package net.blimster.gwt.threejs.wdl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import net.blimster.gwt.threejs.wdl.services.ThreeJsWrapperDescriptionLanguageGrammarAccess;

public class ThreeJsWrapperDescriptionLanguageParser extends AbstractContentAssistParser {
	
	@Inject
	private ThreeJsWrapperDescriptionLanguageGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected net.blimster.gwt.threejs.wdl.ui.contentassist.antlr.internal.InternalThreeJsWrapperDescriptionLanguageParser createParser() {
		net.blimster.gwt.threejs.wdl.ui.contentassist.antlr.internal.InternalThreeJsWrapperDescriptionLanguageParser result = new net.blimster.gwt.threejs.wdl.ui.contentassist.antlr.internal.InternalThreeJsWrapperDescriptionLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTypeAccess().getAlternatives_0(), "rule__Type__Alternatives_0");
					put(grammarAccess.getDatatypeAccess().getAlternatives(), "rule__Datatype__Alternatives");
					put(grammarAccess.getObjectWrapperAccess().getGroup(), "rule__ObjectWrapper__Group__0");
					put(grammarAccess.getObjectWrapperAccess().getGroup_3(), "rule__ObjectWrapper__Group_3__0");
					put(grammarAccess.getConstructorSectionAccess().getGroup(), "rule__ConstructorSection__Group__0");
					put(grammarAccess.getConstructorSectionAccess().getGroup_2(), "rule__ConstructorSection__Group_2__0");
					put(grammarAccess.getConstructorSectionAccess().getGroup_3(), "rule__ConstructorSection__Group_3__0");
					put(grammarAccess.getConstructorAccess().getGroup(), "rule__Constructor__Group__0");
					put(grammarAccess.getConstructorAccess().getGroup_4(), "rule__Constructor__Group_4__0");
					put(grammarAccess.getPropertySectionAccess().getGroup(), "rule__PropertySection__Group__0");
					put(grammarAccess.getPropertyAccess().getGroup(), "rule__Property__Group__0");
					put(grammarAccess.getMethodSectionAccess().getGroup(), "rule__MethodSection__Group__0");
					put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
					put(grammarAccess.getMethodAccess().getGroup_3(), "rule__Method__Group_3__0");
					put(grammarAccess.getMethodAccess().getGroup_3_1(), "rule__Method__Group_3_1__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getTypeAccess().getGroup(), "rule__Type__Group__0");
					put(grammarAccess.getArrayTypeAccess().getGroup(), "rule__ArrayType__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getModelAccess().getWrappersAssignment(), "rule__Model__WrappersAssignment");
					put(grammarAccess.getObjectWrapperAccess().getAbstractAssignment_0(), "rule__ObjectWrapper__AbstractAssignment_0");
					put(grammarAccess.getObjectWrapperAccess().getNameAssignment_2(), "rule__ObjectWrapper__NameAssignment_2");
					put(grammarAccess.getObjectWrapperAccess().getSupertypeAssignment_3_1(), "rule__ObjectWrapper__SupertypeAssignment_3_1");
					put(grammarAccess.getObjectWrapperAccess().getPckAssignment_6(), "rule__ObjectWrapper__PckAssignment_6");
					put(grammarAccess.getObjectWrapperAccess().getConstructorSectionAssignment_8(), "rule__ObjectWrapper__ConstructorSectionAssignment_8");
					put(grammarAccess.getObjectWrapperAccess().getPropertySectionAssignment_9(), "rule__ObjectWrapper__PropertySectionAssignment_9");
					put(grammarAccess.getObjectWrapperAccess().getMethodSectionAssignment_10(), "rule__ObjectWrapper__MethodSectionAssignment_10");
					put(grammarAccess.getConstructorSectionAccess().getBuilderConstructorAssignment_2_0(), "rule__ConstructorSection__BuilderConstructorAssignment_2_0");
					put(grammarAccess.getConstructorSectionAccess().getDefaultConstructorAssignment_3_0(), "rule__ConstructorSection__DefaultConstructorAssignment_3_0");
					put(grammarAccess.getConstructorSectionAccess().getConstructorsAssignment_4(), "rule__ConstructorSection__ConstructorsAssignment_4");
					put(grammarAccess.getConstructorAccess().getNameAssignment_1(), "rule__Constructor__NameAssignment_1");
					put(grammarAccess.getConstructorAccess().getParametersAssignment_3(), "rule__Constructor__ParametersAssignment_3");
					put(grammarAccess.getConstructorAccess().getParametersAssignment_4_1(), "rule__Constructor__ParametersAssignment_4_1");
					put(grammarAccess.getConstructorAccess().getJsonAssignment_6(), "rule__Constructor__JsonAssignment_6");
					put(grammarAccess.getPropertySectionAccess().getPropertiesAssignment_2(), "rule__PropertySection__PropertiesAssignment_2");
					put(grammarAccess.getPropertyAccess().getReadOnlyAssignment_0(), "rule__Property__ReadOnlyAssignment_0");
					put(grammarAccess.getPropertyAccess().getTypeAssignment_1(), "rule__Property__TypeAssignment_1");
					put(grammarAccess.getPropertyAccess().getNameAssignment_2(), "rule__Property__NameAssignment_2");
					put(grammarAccess.getMethodSectionAccess().getMethodsAssignment_2(), "rule__MethodSection__MethodsAssignment_2");
					put(grammarAccess.getMethodAccess().getReturnTypeAssignment_0(), "rule__Method__ReturnTypeAssignment_0");
					put(grammarAccess.getMethodAccess().getNameAssignment_1(), "rule__Method__NameAssignment_1");
					put(grammarAccess.getMethodAccess().getParametersAssignment_3_0(), "rule__Method__ParametersAssignment_3_0");
					put(grammarAccess.getMethodAccess().getParametersAssignment_3_1_1(), "rule__Method__ParametersAssignment_3_1_1");
					put(grammarAccess.getParameterAccess().getTypeAssignment_0(), "rule__Parameter__TypeAssignment_0");
					put(grammarAccess.getParameterAccess().getNameAssignment_1(), "rule__Parameter__NameAssignment_1");
					put(grammarAccess.getTypeAccess().getDatatypeAssignment_0_0(), "rule__Type__DatatypeAssignment_0_0");
					put(grammarAccess.getTypeAccess().getWrapperAssignment_0_1(), "rule__Type__WrapperAssignment_0_1");
					put(grammarAccess.getTypeAccess().getArrayTypeAssignment_1(), "rule__Type__ArrayTypeAssignment_1");
					put(grammarAccess.getArrayTypeAccess().getDimensionsAssignment_2(), "rule__ArrayType__DimensionsAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			net.blimster.gwt.threejs.wdl.ui.contentassist.antlr.internal.InternalThreeJsWrapperDescriptionLanguageParser typedParser = (net.blimster.gwt.threejs.wdl.ui.contentassist.antlr.internal.InternalThreeJsWrapperDescriptionLanguageParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public ThreeJsWrapperDescriptionLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(ThreeJsWrapperDescriptionLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
